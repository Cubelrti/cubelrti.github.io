(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{168:function(e,r,t){"use strict";t.r(r);var v=t(0),_=Object(v.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h1",{attrs:{id:"v8-torque"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v8-torque","aria-hidden":"true"}},[e._v("#")]),e._v(" V8 Torque")]),e._v(" "),t("p",[e._v("对于一个V8读者来说，我们可能听说过"),t("code",[e._v("CodeStubAssembler")]),e._v("或者他的缩写"),t("code",[e._v("CSA")]),e._v("。CSA是一个V8的组件，它可以让我们直接用C++来写一些底层的TurboFan IR，然后编译成合适的、用TurboFan作为后端的机械码。")]),e._v(" "),t("p",[e._v("CSA常常被利用来写一些JavaScript自带的语言特性的“捷径”。这些捷径用来检测一些可以被优化的代码，比如原型链中没有元素，没有访问器，等等，然后使用一些更快、更专一的实现去完成这些操作。这种优化相对于使用传统的、通用的方法来说，有着几倍的执行时间优势。")]),e._v(" "),t("p",[e._v("CSA的劣势在于它可以被认为是一种“汇编”语言。控制流使用了很多"),t("code",[e._v("label")]),e._v("和"),t("code",[e._v("goto")]),e._v("，让CSA在使用一些复杂的实现的时候，很难去读懂和保证它不产生错误。")]),e._v(" "),t("p",[e._v("对于"),t("code",[e._v("V8 Torque")]),e._v("。这是一种领域专属语言，使用了和Typescript类似的语法。Torque几乎允许所有CSA用到的控制语句和控制层，同时提供了高阶的循环包装——"),t("code",[e._v("while")]),e._v("和"),t("code",[e._v("For")]),e._v("等待。这个语言是强类型的，同时将在以后的版本中包含类似于Rust的安全检查和越界检查，从而保证了V8工程师有更好的安全性保证。")]),e._v(" "),t("p",[e._v("第一个用Torque写的的内置算法就是"),t("code",[e._v("TypedArray#sort")]),e._v("和"),t("code",[e._v("Dataview")]),e._v("的操作。他们都给Torque开发者们提供了额外的反馈。在编写的时候，JSArray的一些实现被搬移到了Torque上（比如Array#unshift），同时，其他的数组方法都被完全重写了。")])])}],!1,null,null,null);r.default=_.exports}}]);